import sys

input = sys.stdin.readline

n = int(input())
dp = [0] * (n + 1)  # 연산 횟수를 저장할 리스트

# Bottom-up(Tabulation) 상향식 방식으로 앞의 결과 값을 사용
# 앞에서부터 연산 시작 -> 1이 되면 정답이므로 2부터 시작
# 1을 빼는 경우, 2로 나누는 경우, 3으로 나누는 경우를 모두 생각하여 최솟값을 찾아야 함.
# 예를 들어, 1이 2가 되는 방법은 1을 더하는 방법(횟수 1)과 2를 곱하는 방법(횟수 1)으로 총 2가지가 있고, 최소 횟수는 1이다.
# 이어서, 3이 되는 방법은 2에 1을 더하는 방법(횟수 2)과 1에 3을 곱하는 방법(횟수 1)으로 총 2가지가 있고, 최소 횟수는 1이다.
# 이런 방식으로 n까지의 최소 횟수를 구할 수 있다.
for i in range(2, n + 1):
    # 맨 처음엔 1을 뺐을 경우의 횟수를 저장
    dp[i] = dp[i - 1] + 1

    # 만약 3으로 나누어진다면
    if i % 3 == 0:
        # 앞서 저장했던 1을 뺐을 경우의 횟수와 3으로 나누었을 경우의 횟수를 비교하여
        # 더 작은 값을 저장
        dp[i] = min(dp[i], dp[i // 3] + 1)

    # 만약 2로 나누어진다면
    if i % 2 == 0:
        # 앞서 저장했던 1을 뺐을 경우의 횟수와 2로 나누었을 경우의 횟수를 비교하여 더 작은 값을 저장
        # 3으로도 나누어지는 수였다면 앞서 비교되어서 저장되었던 수랑 다시 비교하여 더 작은 값을 저장
        dp[i] = min(dp[i], dp[i // 2] + 1)

print(dp[n])
